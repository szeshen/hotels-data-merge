// Code generated by mockery v2.38.0. DO NOT EDIT.

package usecase

import (
	context "context"

	mock "github.com/stretchr/testify/mock"
)

// MockHotelRepository is an autogenerated mock type for the HotelRepository type
type MockHotelRepository struct {
	mock.Mock
}

// ListHotels provides a mock function with given fields: ctx
func (_m *MockHotelRepository) ListHotels(ctx context.Context) map[string][]Hotel {
	ret := _m.Called(ctx)

	if len(ret) == 0 {
		panic("no return value specified for ListHotels")
	}

	var r0 map[string][]Hotel
	if rf, ok := ret.Get(0).(func(context.Context) map[string][]Hotel); ok {
		r0 = rf(ctx)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(map[string][]Hotel)
		}
	}

	return r0
}

// NewMockHotelRepository creates a new instance of MockHotelRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockHotelRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockHotelRepository {
	mock := &MockHotelRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
